package Package;

import javax.swing.*;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;

/**
 * @author Dominik Więcek <dominik.wiecek@pwr.edu.pl>
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     *
     */
    private static final long serialVersionUID = 1L;
    /**
     * Creates new form MainFrame
     */
    DefaultTableModel Model;

    public MainFrame() {
        this.setTitle("Grounding modal implications and equivalences - example");
        //P+	P-		Q+		Q-
        String data[][] = {{"", "3", "1,2", "3"},
                {"1,2", "3", "1,2", "3"},
                {"1,2", "3", "2", "3"},
                {"", "1,2,3", "1,2", "3"},
                {"", "1,2,3", "", "1,2"},
                {"1,2", "3", "", "1,2"},
                {"1", "2,3", "1,2", "3"},
                {"1,2", "3", "1,2", "3"},
                {"1", "2,3", "1,2", "3"},
                {"1,2", "3", "1,2", "3"},
                {"1,2", "3", "1", "2,3"},
                {"1,2", "3", "2", "1,3"},
                {"1,2", "3", "1,2", "3"}};
        String col[] = {"P+", "P-", "Q+", "Q-"};
        Model = new DefaultTableModel(data, col);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        ResultTextArea = new javax.swing.JTextArea();
        RunButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        Sampling = new javax.swing.JTextField();
        ButtonMinus = new javax.swing.JButton();
        ButtonPlus = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        ObjCombo = new javax.swing.JComboBox<String>();
        ButtonMinusSus = new javax.swing.JButton();
        ButtonPlusSus = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        Imp = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        Implications_MinPos = new javax.swing.JTextField();
        labelll4 = new javax.swing.JLabel();
        Implications_MaxPos = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        labelll5 = new javax.swing.JLabel();
        Implications_MaxBel = new javax.swing.JTextField();
        Implications_MinBel = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        Implications_MinKnow = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        Equ = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        Equivalences_MinPos = new javax.swing.JTextField();
        labelll6 = new javax.swing.JLabel();
        Equivalences_MaxPos = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        labelll7 = new javax.swing.JLabel();
        Equivalences_MaxBel = new javax.swing.JTextField();
        Equivalences_MinBel = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        Equivalences_MinKnow = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Slider = new javax.swing.JSlider();
        DegreeOfProcessingField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ResultTextArea.setColumns(20);
        ResultTextArea.setRows(5);
        jScrollPane1.setViewportView(ResultTextArea);

        RunButton.setBackground(new java.awt.Color(102, 204, 0));
        RunButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        RunButton.setForeground(new java.awt.Color(255, 255, 255));
        RunButton.setText("Execute");
        RunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunButtonActionPerformed(evt);
            }
        });

        ClearButton.setBackground(new java.awt.Color(255, 51, 51));
        ClearButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ClearButton.setForeground(new java.awt.Color(51, 51, 51));
        ClearButton.setText("CLR");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Sampling frequency:");

        Sampling.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Sampling.setText("3");

        ButtonMinus.setText("-");
        ButtonMinus.setMaximumSize(new java.awt.Dimension(41, 23));
        ButtonMinus.setMinimumSize(new java.awt.Dimension(41, 23));
        ButtonMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMinusActionPerformed(evt);
            }
        });

        ButtonPlus.setText("+");
        ButtonPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPlusActionPerformed(evt);
            }
        });

        Table.setModel(Model);
        jScrollPane2.setViewportView(Table);

        jLabel7.setText("Output:");

        ObjCombo.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[]{"Object 1", "Object 2", "Object 3"}));

        ButtonMinusSus.setText("-");
        ButtonMinusSus.setMaximumSize(new java.awt.Dimension(41, 23));
        ButtonMinusSus.setMinimumSize(new java.awt.Dimension(41, 23));
        ButtonMinusSus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMinusSusActionPerformed(evt);
            }
        });

        ButtonPlusSus.setText("+");
        ButtonPlusSus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPlusSusActionPerformed(evt);
            }
        });

        jLabel10.setText("Suspend row:");

        jLabel11.setText("Append row:");

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thresholds"));
        Con = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        Conjunction_MinPos = new javax.swing.JTextField();
        labelll2 = new javax.swing.JLabel();
        Conjunction_MaxPos = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        labelll3 = new javax.swing.JLabel();
        Conjunction_MaxBel = new javax.swing.JTextField();
        Conjunction_MinBel = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        Conjunction_MinKnow = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();

        jLabel12.setText("λMinPos:");

        Conjunction_MinPos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Conjunction_MinPos.setText("0.3");

        labelll2.setText("λMaxPos:");

        Conjunction_MaxPos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Conjunction_MaxPos.setText("0.6");

        jLabel13.setText("λMinBel:");

        labelll3.setText("λMaxBel:");

        Conjunction_MaxBel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Conjunction_MaxBel.setText("0.9");

        Conjunction_MinBel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Conjunction_MinBel.setText("0.6");

        jLabel14.setText("λMinKnow:");

        Conjunction_MinKnow.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Conjunction_MinKnow.setText("0.9");

        jLabel20.setText("conjunction thresholds:");

        javax.swing.GroupLayout ConLayout = new javax.swing.GroupLayout(Con);
        Con.setLayout(ConLayout);
        ConLayout.setHorizontalGroup(
                ConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ConLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(ConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(ConLayout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Conjunction_MinPos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(labelll2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Conjunction_MaxPos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Conjunction_MinBel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(labelll3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Conjunction_MaxBel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel14)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Conjunction_MinKnow, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel20))
                                .addContainerGap(16, Short.MAX_VALUE))
        );
        ConLayout.setVerticalGroup(
                ConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ConLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ConLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel12)
                                        .addComponent(Conjunction_MinPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelll2)
                                        .addComponent(Conjunction_MaxPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13)
                                        .addComponent(Conjunction_MinBel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelll3)
                                        .addComponent(Conjunction_MaxBel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel14)
                                        .addComponent(Conjunction_MinKnow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("∧", Con);

        Or = new JPanel();
        jTabbedPane2.addTab("∨", null, Or, null);

        label = new JLabel();
        label.setText("λMinPos:");

        Alternative_MinPos = new JTextField();
        Alternative_MinPos.setText("0.3");
        Alternative_MinPos.setHorizontalAlignment(SwingConstants.RIGHT);

        label_1 = new JLabel();
        label_1.setText("λMaxPos:");

        Alternative_MaxPos = new JTextField();
        Alternative_MaxPos.setText("0.6");
        Alternative_MaxPos.setHorizontalAlignment(SwingConstants.RIGHT);

        label_2 = new JLabel();
        label_2.setText("λMinBel:");

        Alternative_MinBel = new JTextField();
        Alternative_MinBel.setText("0.6");
        Alternative_MinBel.setHorizontalAlignment(SwingConstants.RIGHT);

        label_3 = new JLabel();
        label_3.setText("λMaxBel:");

        Alternative_MaxBel = new JTextField();
        Alternative_MaxBel.setText("0.9");
        Alternative_MaxBel.setHorizontalAlignment(SwingConstants.RIGHT);

        label_4 = new JLabel();
        label_4.setText("λMinKnow:");

        Alternative_MinKnow = new JTextField();
        Alternative_MinKnow.setText("0.9");
        Alternative_MinKnow.setHorizontalAlignment(SwingConstants.RIGHT);

        label_5 = new JLabel();
        label_5.setText("alternative thresholds:");
        GroupLayout gl_Or = new GroupLayout(Or);
        gl_Or.setHorizontalGroup(
                gl_Or.createParallelGroup(Alignment.LEADING)
                        .addGap(0, 503, Short.MAX_VALUE)
                        .addGroup(gl_Or.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(gl_Or.createParallelGroup(Alignment.LEADING)
                                        .addGroup(gl_Or.createSequentialGroup()
                                                .addComponent(label)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(Alternative_MinPos, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(ComponentPlacement.UNRELATED)
                                                .addComponent(label_1)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(Alternative_MaxPos, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18)
                                                .addComponent(label_2)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(Alternative_MinBel, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(ComponentPlacement.UNRELATED)
                                                .addComponent(label_3)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(Alternative_MaxBel, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18)
                                                .addComponent(label_4)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(Alternative_MinKnow, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE))
                                        .addComponent(label_5))
                                .addContainerGap(16, Short.MAX_VALUE))
        );
        gl_Or.setVerticalGroup(
                gl_Or.createParallelGroup(Alignment.LEADING)
                        .addGap(0, 55, Short.MAX_VALUE)
                        .addGroup(gl_Or.createSequentialGroup()
                                .addGap(4)
                                .addComponent(label_5)
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addGroup(gl_Or.createParallelGroup(Alignment.BASELINE)
                                        .addComponent(label)
                                        .addComponent(Alternative_MinPos, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label_1)
                                        .addComponent(Alternative_MaxPos, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label_2)
                                        .addComponent(Alternative_MinBel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label_3)
                                        .addComponent(Alternative_MaxBel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label_4)
                                        .addComponent(Alternative_MinKnow, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Or.setLayout(gl_Or);

        Nor = new JPanel();
        jTabbedPane2.addTab("⊻", null, Nor, null);

        label_6 = new JLabel();
        label_6.setText("λMinPos:");

        Exclusive_MinPos = new JTextField();
        Exclusive_MinPos.setText("0.3");
        Exclusive_MinPos.setHorizontalAlignment(SwingConstants.RIGHT);

        label_7 = new JLabel();
        label_7.setText("λMaxPos:");

        Exclusive_MaxPos = new JTextField();
        Exclusive_MaxPos.setText("0.6");
        Exclusive_MaxPos.setHorizontalAlignment(SwingConstants.RIGHT);

        label_8 = new JLabel();
        label_8.setText("λMinBel:");

        Exclusive_MinBel = new JTextField();
        Exclusive_MinBel.setText("0.6");
        Exclusive_MinBel.setHorizontalAlignment(SwingConstants.RIGHT);

        label_9 = new JLabel();
        label_9.setText("λMaxBel:");

        Exclusive_MaxBel = new JTextField();
        Exclusive_MaxBel.setText("0.9");
        Exclusive_MaxBel.setHorizontalAlignment(SwingConstants.RIGHT);

        label_10 = new JLabel();
        label_10.setText("λMinKnow:");

        Exclusive_MinKnow = new JTextField();
        Exclusive_MinKnow.setText("0.9");
        Exclusive_MinKnow.setHorizontalAlignment(SwingConstants.RIGHT);

        label_11 = new JLabel();
        label_11.setText("exclusive thresholds:");
        GroupLayout gl_Nor = new GroupLayout(Nor);
        gl_Nor.setHorizontalGroup(
                gl_Nor.createParallelGroup(Alignment.LEADING)
                        .addGap(0, 503, Short.MAX_VALUE)
                        .addGroup(gl_Nor.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(gl_Nor.createParallelGroup(Alignment.LEADING)
                                        .addGroup(gl_Nor.createSequentialGroup()
                                                .addComponent(label_6)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(Exclusive_MinPos, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(ComponentPlacement.UNRELATED)
                                                .addComponent(label_7)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(Exclusive_MaxPos, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18)
                                                .addComponent(label_8)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(Exclusive_MinBel, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(ComponentPlacement.UNRELATED)
                                                .addComponent(label_9)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(Exclusive_MaxBel, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18)
                                                .addComponent(label_10)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(Exclusive_MinKnow, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE))
                                        .addComponent(label_11))
                                .addContainerGap(16, Short.MAX_VALUE))
        );
        gl_Nor.setVerticalGroup(
                gl_Nor.createParallelGroup(Alignment.LEADING)
                        .addGap(0, 55, Short.MAX_VALUE)
                        .addGroup(gl_Nor.createSequentialGroup()
                                .addGap(4)
                                .addComponent(label_11)
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addGroup(gl_Nor.createParallelGroup(Alignment.BASELINE)
                                        .addComponent(label_6)
                                        .addComponent(Exclusive_MinPos, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label_7)
                                        .addComponent(Exclusive_MaxPos, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label_8)
                                        .addComponent(Exclusive_MinBel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label_9)
                                        .addComponent(Exclusive_MaxBel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label_10)
                                        .addComponent(Exclusive_MinKnow, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Nor.setLayout(gl_Nor);

        jLabel15.setText("λMinPos:");

        Implications_MinPos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Implications_MinPos.setText("0.3");

        labelll4.setText("λMaxPos:");

        Implications_MaxPos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Implications_MaxPos.setText("0.6");

        jLabel16.setText("λMinBel:");

        labelll5.setText("λMaxBel:");

        Implications_MaxBel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Implications_MaxBel.setText("0.9");

        Implications_MinBel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Implications_MinBel.setText("0.6");

        jLabel17.setText("λMinKnow:");

        Implications_MinKnow.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Implications_MinKnow.setText("0.9");

        jLabel21.setText("implications thresholds:");

        javax.swing.GroupLayout ImpLayout = new javax.swing.GroupLayout(Imp);
        Imp.setLayout(ImpLayout);
        ImpLayout.setHorizontalGroup(
                ImpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ImpLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(ImpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(ImpLayout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Implications_MinPos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(labelll4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Implications_MaxPos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel16)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Implications_MinBel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(labelll5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Implications_MaxBel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Implications_MinKnow, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel21))
                                .addContainerGap(16, Short.MAX_VALUE))
        );
        ImpLayout.setVerticalGroup(
                ImpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ImpLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ImpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel15)
                                        .addComponent(Implications_MinPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelll4)
                                        .addComponent(Implications_MaxPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel16)
                                        .addComponent(Implications_MinBel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelll5)
                                        .addComponent(Implications_MaxBel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel17)
                                        .addComponent(Implications_MinKnow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("⇒", Imp);

        jLabel18.setText("λMinPos:");

        Equivalences_MinPos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Equivalences_MinPos.setText("0.3");

        labelll6.setText("λMaxPos:");

        Equivalences_MaxPos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Equivalences_MaxPos.setText("0.6");

        jLabel19.setText("λMinBel:");

        labelll7.setText("λMaxBel:");

        Equivalences_MaxBel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Equivalences_MaxBel.setText("0.9");

        Equivalences_MinBel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Equivalences_MinBel.setText("0.6");

        jLabel22.setText("λMinKnow:");

        Equivalences_MinKnow.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Equivalences_MinKnow.setText("0.9");

        jLabel23.setText("equivalences thresholds:");

        javax.swing.GroupLayout EquLayout = new javax.swing.GroupLayout(Equ);
        Equ.setLayout(EquLayout);
        EquLayout.setHorizontalGroup(
                EquLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(EquLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(EquLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(EquLayout.createSequentialGroup()
                                                .addComponent(jLabel18)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Equivalences_MinPos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(labelll6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Equivalences_MaxPos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel19)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Equivalences_MinBel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(labelll7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Equivalences_MaxBel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel22)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Equivalences_MinKnow, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel23))
                                .addContainerGap(16, Short.MAX_VALUE))
        );
        EquLayout.setVerticalGroup(
                EquLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(EquLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(EquLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel18)
                                        .addComponent(Equivalences_MinPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelll6)
                                        .addComponent(Equivalences_MaxPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel19)
                                        .addComponent(Equivalences_MinBel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelll7)
                                        .addComponent(Equivalences_MaxBel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel22)
                                        .addComponent(Equivalences_MinKnow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("⇔", Equ);

        jLabel24.setText("Knowledge base:");

        jLabel25.setText("for:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Degree of procesing"));

        Slider.setValue(0);
        Slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderStateChanged(evt);
            }
        });

        DegreeOfProcessingField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DegreeOfProcessingField.setText("0");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("%");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(DegreeOfProcessingField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(DegreeOfProcessingField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel8))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel24)
                                                .addGap(93, 93, 93)
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ButtonPlusSus)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ButtonMinusSus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ButtonPlus)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ButtonMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jTabbedPane2))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(119, 119, 119)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel6)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(Sampling, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel25)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(ObjCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(jLabel7)
                                                                        .addGap(35, 35, 35)
                                                                        .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(RunButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel6)
                                                        .addComponent(Sampling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(ObjCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel25))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(13, 13, 13)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel7)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(ClearButton)
                                                                .addComponent(RunButton)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane1))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(ButtonMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(ButtonPlus)
                                                                .addComponent(ButtonMinusSus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(ButtonPlusSus)
                                                                .addComponent(jLabel11)
                                                                .addComponent(jLabel10))
                                                        .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)))
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunButtonActionPerformed
        runButtonAction();
    }//GEN-LAST:event_RunButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        ResultTextArea.setText("");
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void ButtonPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPlusActionPerformed
        Model.addRow(new Object[]{"1,2", "3", "1,2", "3"});
    }//GEN-LAST:event_ButtonPlusActionPerformed

    private void ButtonMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMinusActionPerformed
        if (Model.getRowCount() > 1)
            Model.removeRow(Model.getRowCount() - 1);
    }//GEN-LAST:event_ButtonMinusActionPerformed

    private void SliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderStateChanged
        DegreeOfProcessingField.setText(String.valueOf(Slider.getValue()));
        double slider = Slider.getValue();
        int select = (int) ((Model.getRowCount() - 1) * (slider / 100));
        //ResultTextArea.setText(String.valueOf(select)+" do "+String.valueOf(Model.getRowCount()-1));
        Table.setRowSelectionInterval(select, Model.getRowCount() - 1);
        runButtonAction();

    }//GEN-LAST:event_SliderStateChanged

    private void ButtonMinusSusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMinusSusActionPerformed
        if (Model.getRowCount() > 1)
            Model.removeRow(0);
    }//GEN-LAST:event_ButtonMinusSusActionPerformed

    private void ButtonPlusSusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPlusSusActionPerformed
        Model.insertRow(0, new Object[]{"1,2", "3", "1,2", "3"});
    }//GEN-LAST:event_ButtonPlusSusActionPerformed

    public void runButtonAction() {
        ArrayList<BaseProfile> Data = new ArrayList<BaseProfile>(); // knowledge state
        Double degreeOfProcessing = Double.parseDouble(DegreeOfProcessingField.getText()) / 100.0;
        Double samplingFreq = Double.parseDouble(Sampling.getText());
        Double epsilon = 0.02;
        Thresholds Conjuction = new Thresholds(Double.parseDouble(this.Conjunction_MinPos.getText()), Double.parseDouble(this.Conjunction_MaxPos.getText()),
                Double.parseDouble(this.Conjunction_MinBel.getText()), Double.parseDouble(this.Conjunction_MaxBel.getText()), Double.parseDouble(this.Conjunction_MinKnow.getText()), epsilon);
        Thresholds Alternative = new Thresholds(Double.parseDouble(this.Alternative_MinPos.getText()), Double.parseDouble(this.Alternative_MaxPos.getText()),
                Double.parseDouble(this.Alternative_MinBel.getText()), Double.parseDouble(this.Alternative_MaxBel.getText()), Double.parseDouble(this.Alternative_MinKnow.getText()), epsilon);
        Thresholds Exclusive = new Thresholds(Double.parseDouble(this.Exclusive_MinPos.getText()), Double.parseDouble(this.Exclusive_MaxPos.getText()),
                Double.parseDouble(this.Exclusive_MinBel.getText()), Double.parseDouble(this.Exclusive_MaxBel.getText()), Double.parseDouble(this.Exclusive_MinKnow.getText()), epsilon);
        Thresholds Implication = new Thresholds(Double.parseDouble(this.Implications_MinPos.getText()), Double.parseDouble(this.Implications_MaxPos.getText()),
                Double.parseDouble(this.Implications_MinBel.getText()), Double.parseDouble(this.Implications_MaxBel.getText()), Double.parseDouble(this.Implications_MinKnow.getText()), epsilon);
        Thresholds Equivalence = new Thresholds(Double.parseDouble(this.Equivalences_MinPos.getText()), Double.parseDouble(this.Equivalences_MaxPos.getText()),
                Double.parseDouble(this.Equivalences_MinBel.getText()), Double.parseDouble(this.Equivalences_MaxBel.getText()), Double.parseDouble(this.Equivalences_MinKnow.getText()), epsilon);
        Integer Obj = this.ObjCombo.getSelectedIndex() + 1;

        //Data from Jtable => ArrayList<BaseProfile> Data
        for (int row = 0; row < Model.getRowCount(); row++) {
            BaseProfile BP = new BaseProfile();
            for (int col = 0; col < Model.getColumnCount(); col++) {
                String cell = (String) Model.getValueAt(row, col);
                if (cell.isEmpty()) break;
                String[] array = cell.split(",");
                for (int item = 0; item < array.length; item++) {
                    switch (col) {
                        case 0:
                            BP.Pplus.add(Integer.parseInt(array[item]));
                            break;
                        case 1:
                            BP.Pminus.add(Integer.parseInt(array[item]));
                            break;
                        case 2:
                            BP.Qplus.add(Integer.parseInt(array[item]));
                            break;
                        case 3:
                            BP.Qminus.add(Integer.parseInt(array[item]));
                            break;
                    }

                }

            }
            Data.add(BP);
        }
        //System class setup
        SystemProcess sys = new SystemProcess(samplingFreq, Conjuction, Alternative, Exclusive, Implication, Equivalence, new KnowledgeState(degreeOfProcessing, Data), Obj);
        ResultTextArea.setText(sys.start());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonMinus;
    private javax.swing.JButton ButtonMinusSus;
    private javax.swing.JButton ButtonPlus;
    private javax.swing.JButton ButtonPlusSus;
    private javax.swing.JButton ClearButton;
    private javax.swing.JPanel Con;
    private javax.swing.JTextField Conjunction_MaxBel;
    private javax.swing.JTextField Conjunction_MaxPos;
    private javax.swing.JTextField Conjunction_MinBel;
    private javax.swing.JTextField Conjunction_MinKnow;
    private javax.swing.JTextField Conjunction_MinPos;
    private javax.swing.JTextField DegreeOfProcessingField;
    private javax.swing.JPanel Equ;
    private javax.swing.JTextField Equivalences_MaxBel;
    private javax.swing.JTextField Equivalences_MaxPos;
    private javax.swing.JTextField Equivalences_MinBel;
    private javax.swing.JTextField Equivalences_MinKnow;
    private javax.swing.JTextField Equivalences_MinPos;
    private javax.swing.JPanel Imp;
    private javax.swing.JTextField Implications_MaxBel;
    private javax.swing.JTextField Implications_MaxPos;
    private javax.swing.JTextField Implications_MinBel;
    private javax.swing.JTextField Implications_MinKnow;
    private javax.swing.JTextField Implications_MinPos;
    private javax.swing.JComboBox<String> ObjCombo;
    private javax.swing.JTextArea ResultTextArea;
    private javax.swing.JButton RunButton;
    private javax.swing.JTextField Sampling;
    private javax.swing.JSlider Slider;
    private javax.swing.JTable Table;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel labelll2;
    private javax.swing.JLabel labelll3;
    private javax.swing.JLabel labelll4;
    private javax.swing.JLabel labelll5;
    private javax.swing.JLabel labelll6;
    private javax.swing.JLabel labelll7;
    private JPanel Or;
    private JLabel label;
    private JTextField Alternative_MinPos;
    private JLabel label_1;
    private JTextField Alternative_MaxPos;
    private JLabel label_2;
    private JTextField Alternative_MinBel;
    private JLabel label_3;
    private JTextField Alternative_MaxBel;
    private JLabel label_4;
    private JTextField Alternative_MinKnow;
    private JLabel label_5;
    private JPanel Nor;
    private JLabel label_6;
    private JTextField Exclusive_MinPos;
    private JLabel label_7;
    private JTextField Exclusive_MaxPos;
    private JLabel label_8;
    private JTextField Exclusive_MinBel;
    private JLabel label_9;
    private JTextField Exclusive_MaxBel;
    private JLabel label_10;
    private JTextField Exclusive_MinKnow;
    private JLabel label_11;
    // End of variables declaration//GEN-END:variables
}
